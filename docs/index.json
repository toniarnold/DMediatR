{
  "api/DMediatR.Bing.html": {
    "href": "api/DMediatR.Bing.html",
    "title": "Class Bing | DMediatR",
    "keywords": "Class Bing Namespace DMediatR Assembly DMediatR.dll Broadcast Ping as MediatR INotification. public class Bing : SerializationCountMessage, INotification Inheritance object SerializationCountMessage Bing Implements INotification Inherited Members SerializationCountMessage.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Message public string? Message { get; set; } Property Value string"
  },
  "api/DMediatR.CertificateOptions.html": {
    "href": "api/DMediatR.CertificateOptions.html",
    "title": "Class CertificateOptions | DMediatR",
    "keywords": "Class CertificateOptions Namespace DMediatR Assembly DMediatR.dll X509 certificate specification, inheriting the password. public sealed class CertificateOptions : PasswordOptions Inheritance object PasswordOptions CertificateOptions Inherited Members PasswordOptions.SectionName PasswordOptions.Password object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties FilePath [Required] public string? FilePath { get; set; } Property Value string FilenamePrefix [Required] public string? FilenamePrefix { get; set; } Property Value string HostName [Required] public string? HostName { get; set; } Property Value string RenewBeforeExpirationDays [Required] [Range(typeof(int), \"0\", \"3650\")] public int? RenewBeforeExpirationDays { get; set; } Property Value int? ValidDays [Required] [Range(typeof(int), \"1\", \"3650\")] public int? ValidDays { get; set; } Property Value int?"
  },
  "api/DMediatR.Certificates.html": {
    "href": "api/DMediatR.Certificates.html",
    "title": "Class Certificates | DMediatR",
    "keywords": "Class Certificates Namespace DMediatR Assembly DMediatR.dll Utility to create a valid initial X509 certificate chain offline to be distributed to all gRPC nodes. public class Certificates Inheritance object Certificates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Certificates(IServiceProvider) public Certificates(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods SetUpInitialChain() Generate or renew the certificate chain by directly using the local services public void SetUpInitialChain() SetUpInitialChainAsync(CancellationToken) Generate or renew the certificate chain by directly using the local services public Task SetUpInitialChainAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/DMediatR.CorrelatedNotification.html": {
    "href": "api/DMediatR.CorrelatedNotification.html",
    "title": "Class CorrelatedNotification | DMediatR",
    "keywords": "Class CorrelatedNotification Namespace DMediatR Assembly DMediatR.dll Static configuration of ICorrelatedNotification for extreme workload patterns. public static class CorrelatedNotification Inheritance object CorrelatedNotification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MaxLatency Duration the CorrelationGuid should stay in the cache. Required to prevent it from indefinitely growing. Afterwards, received duplicate copies of a notifications can no more be correlated and thus ignored. Defaults to 1 day, but can be adjusted to specific workloads here. public static TimeSpan MaxLatency { get; set; } Property Value TimeSpan"
  },
  "api/DMediatR.CustomSerializer-1.html": {
    "href": "api/DMediatR.CustomSerializer-1.html",
    "title": "Class CustomSerializer<T> | DMediatR",
    "keywords": "Class CustomSerializer<T> Namespace DMediatR Assembly DMediatR.dll Generic custom binary serializer to inherit from when implementing a concrete custom serializer for a specific type T. Types deriving from T will also use that serializer. public abstract class CustomSerializer<T> : Serializer, ISerializer Type Parameters T The concrete type to serialize. Inheritance object Serializer CustomSerializer<T> Implements ISerializer Derived SerializationCountSerializer Inherited Members Serializer.Serialize(object) Serializer.Deserialize<T>(byte[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomSerializer(IServiceProvider) public CustomSerializer(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Properties Type Use this type of the serialized object as key for services.AddKeyedSingleton(). public static Type Type { get; } Property Value Type Methods CheckType(Type) Throws an ArgumentException if the given object is not derived of type T of the generic class. protected void CheckType(Type givenType) Parameters givenType Type Exceptions ArgumentException Deserialize(Type, byte[]) public override object Deserialize(Type type, byte[] bytes) Parameters type Type bytes byte[] Returns object Deserialize(Type, byte[], bool) protected object Deserialize(Type type, byte[] bytes, bool checkType) Parameters type Type bytes byte[] checkType bool Returns object Serialize(Type, object) public override byte[] Serialize(Type type, object obj) Parameters type Type obj object Returns byte[] Serialize(Type, object, bool) public byte[] Serialize(Type type, object obj, bool checkType = true) Parameters type Type obj object checkType bool Returns byte[]"
  },
  "api/DMediatR.Dto.html": {
    "href": "api/DMediatR.Dto.html",
    "title": "Class Dto | DMediatR",
    "keywords": "Class Dto Namespace DMediatR Assembly DMediatR.dll One data transfer object class for any type. [DataContract] public class Dto Inheritance object Dto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Bytes The binary serialized object. [DataMember(Order = 2)] public byte[] Bytes { get; set; } Property Value byte[] Type The type of the serialized object. [DataMember(Order = 1)] public Type Type { get; set; } Property Value Type"
  },
  "api/DMediatR.DtoService.html": {
    "href": "api/DMediatR.DtoService.html",
    "title": "Class DtoService | DMediatR",
    "keywords": "Class DtoService Namespace DMediatR Assembly DMediatR.dll Dto consumer to be used in the gRPC server. public class DtoService : IDtoService Inheritance object DtoService Implements IDtoService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DtoService(IServiceProvider, IMediator, ISerializer) public DtoService(IServiceProvider serviceProvider, IMediator mediator, ISerializer serializer) Parameters serviceProvider IServiceProvider mediator IMediator serializer ISerializer Methods PublishAsync(Dto, CallContext) Send the deserialized notification to the local handlers and to all configured remotws. public Task PublishAsync(Dto notificationDto, CallContext context = default) Parameters notificationDto Dto context CallContext Returns Task SendAsync(Dto, CallContext) Send the deserialized request to the local handler. public Task<Dto> SendAsync(Dto requestDto, CallContext context = default) Parameters requestDto Dto context CallContext Returns Task<Dto>"
  },
  "api/DMediatR.GrpcPort.html": {
    "href": "api/DMediatR.GrpcPort.html",
    "title": "Enum GrpcPort | DMediatR",
    "keywords": "Enum GrpcPort Namespace DMediatR Assembly DMediatR.dll Port resp. SSL certificate to use. public enum GrpcPort Fields UseDefault = 0 Use the configured default port with the current certificate. UseRenew = 1 Use the configured OldPort with the old certificate."
  },
  "api/DMediatR.GrpcServer.html": {
    "href": "api/DMediatR.GrpcServer.html",
    "title": "Class GrpcServer | DMediatR",
    "keywords": "Class GrpcServer Namespace DMediatR Assembly DMediatR.dll Utility for creating a gRPC service WebApplicationBuilder and WebApplication in a DMediatR node. public static class GrpcServer Inheritance object GrpcServer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateWebApp(WebApplicationBuilder, GrpcPort) public static WebApplication CreateWebApp(WebApplicationBuilder builder, GrpcPort usePort = GrpcPort.UseDefault) Parameters builder WebApplicationBuilder usePort GrpcPort Returns WebApplication CreateWebAppBuilder(string[]) public static WebApplicationBuilder CreateWebAppBuilder(string[] args) Parameters args string[] Returns WebApplicationBuilder RunRestartWebAppAsync(string[], GrpcPort, CancellationToken) Build and run the WebApplication, repeat after it was stopped with IHostApplicationLifetime.StopApplication() public static Task RunRestartWebAppAsync(string[] args, GrpcPort usePort, CancellationToken cancellationToken) Parameters args string[] usePort GrpcPort cancellationToken CancellationToken Returns Task"
  },
  "api/DMediatR.HostOptions.html": {
    "href": "api/DMediatR.HostOptions.html",
    "title": "Class HostOptions | DMediatR",
    "keywords": "Class HostOptions Namespace DMediatR Assembly DMediatR.dll Specification of a DMediatR node host. Also used for specifying the remotes in RemotesOptions. public sealed class HostOptions Inheritance object HostOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields SectionName public const string SectionName = \"Host\" Field Value string Properties GrpcPort Programmatically set during WebApplication configuration, not bound from config public GrpcPort GrpcPort { get; set; } Property Value GrpcPort Host [Required] public string? Host { get; set; } Property Value string OldPort [Required] [Range(typeof(int), \"1\", \"65535\")] public string? OldPort { get; set; } Property Value string Port [Required] [Range(typeof(int), \"1\", \"65535\")] public string? Port { get; set; } Property Value string"
  },
  "api/DMediatR.ICorrelatedNotification.html": {
    "href": "api/DMediatR.ICorrelatedNotification.html",
    "title": "Interface ICorrelatedNotification | DMediatR",
    "keywords": "Interface ICorrelatedNotification Namespace DMediatR Assembly DMediatR.dll Multiple DMediatR nodes can have cyclic dependencies or there might be indirect diamonds in the configured dependency graph. In such cases a single node receives and would forward the same Notification in multiple duplicate copies. To handle them only once as in a monolith correlate these remote Notifications with a Guid. public interface ICorrelatedNotification : INotification Properties CorrelationGuid To be implemented as public Guid CorrelationGuid { get; init; } = Guid.NewGuid(); Guid CorrelationGuid { get; init; } Property Value Guid"
  },
  "api/DMediatR.IDtoService.html": {
    "href": "api/DMediatR.IDtoService.html",
    "title": "Interface IDtoService | DMediatR",
    "keywords": "Interface IDtoService Namespace DMediatR Assembly DMediatR.dll Code-first gRPC service for sending a MediatR IRequest to the remote IRequestHandler. [ServiceContract] public interface IDtoService Methods PublishAsync(Dto, CallContext) [OperationContract] Task PublishAsync(Dto notification, CallContext context = default) Parameters notification Dto context CallContext Returns Task SendAsync(Dto, CallContext) [OperationContract] Task<Dto> SendAsync(Dto request, CallContext context = default) Parameters request Dto context CallContext Returns Task<Dto>"
  },
  "api/DMediatR.IGrpcChannelPool.html": {
    "href": "api/DMediatR.IGrpcChannelPool.html",
    "title": "Interface IGrpcChannelPool | DMediatR",
    "keywords": "Interface IGrpcChannelPool Namespace DMediatR Assembly DMediatR.dll Its internal implementation provides a cache for long-lived gRPC channels, one instance per address. public interface IGrpcChannelPool : IDisposable Inherited Members IDisposable.Dispose() Methods ForAddress(string, HttpClientHandler) GrpcChannel ForAddress(string address, HttpClientHandler handler) Parameters address string handler HttpClientHandler Returns GrpcChannel Remove(string) void Remove(string address) Parameters address string"
  },
  "api/DMediatR.IRemote.html": {
    "href": "api/DMediatR.IRemote.html",
    "title": "Interface IRemote | DMediatR",
    "keywords": "Interface IRemote Namespace DMediatR Assembly DMediatR.dll Inherit from IRemote and inject Remote to add the SendRemote extension. public interface IRemote Extension Methods RemoteExtension.PublishRemote(IRemote, INotification, CancellationToken) RemoteExtension.SendRemote<TResponse>(IRemote, IRequest<TResponse>, CancellationToken) Properties Remote Remote Remote { get; } Property Value Remote"
  },
  "api/DMediatR.ISerializer.html": {
    "href": "api/DMediatR.ISerializer.html",
    "title": "Interface ISerializer | DMediatR",
    "keywords": "Interface ISerializer Namespace DMediatR Assembly DMediatR.dll Interface for the base serializer and all specialized serializers. Use it for injecting an alternate base BinarySerializer implementation with services.AddKeyedSingleton<ISerializer, BinarySerializer>(typeof(object)); Its pluggable default implementation is a tiny wrapper around MessagePackSerializer.Typeless. public interface ISerializer Methods Deserialize(Type, byte[]) object Deserialize(Type type, byte[] bytes) Parameters type Type bytes byte[] Returns object Deserialize<T>(byte[]) T Deserialize<T>(byte[] bytes) Parameters bytes byte[] Returns T Type Parameters T Serialize(object) byte[] Serialize(object obj) Parameters obj object Returns byte[] Serialize(Type, object) byte[] Serialize(Type type, object obj) Parameters type Type obj object Returns byte[]"
  },
  "api/DMediatR.LocalAttribute.html": {
    "href": "api/DMediatR.LocalAttribute.html",
    "title": "Class LocalAttribute | DMediatR",
    "keywords": "Class LocalAttribute Namespace DMediatR Assembly DMediatR.dll Marks the handlers in this class as local double of a [Remote] class. [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class LocalAttribute : Attribute Inheritance object Attribute LocalAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LocalAttribute(string) public LocalAttribute(string remoteName) Parameters remoteName string Methods RemoteName(Type) The reference name matching the remote double of the class. public static string? RemoteName(Type t) Parameters t Type Returns string"
  },
  "api/DMediatR.PasswordOptions.html": {
    "href": "api/DMediatR.PasswordOptions.html",
    "title": "Class PasswordOptions | DMediatR",
    "keywords": "Class PasswordOptions Namespace DMediatR Assembly DMediatR.dll X509 certificate password. public class PasswordOptions Inheritance object PasswordOptions Derived CertificateOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SectionName public const string SectionName = \"Certificate\" Field Value string Properties Password [Required] public string? Password { get; set; } Property Value string"
  },
  "api/DMediatR.Ping.html": {
    "href": "api/DMediatR.Ping.html",
    "title": "Class Ping | DMediatR",
    "keywords": "Class Ping Namespace DMediatR Assembly DMediatR.dll Simple MediatR IRequest for diagnosis. public class Ping : SerializationCountMessage, IRequest<Pong>, IBaseRequest Inheritance object SerializationCountMessage Ping Implements IRequest<Pong> IBaseRequest Inherited Members SerializationCountMessage.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Ping() public Ping() Ping(string) public Ping(string message) Parameters message string Properties Message public string? Message { get; set; } Property Value string"
  },
  "api/DMediatR.Pong.html": {
    "href": "api/DMediatR.Pong.html",
    "title": "Class Pong | DMediatR",
    "keywords": "Class Pong Namespace DMediatR Assembly DMediatR.dll Response to a Ping request. Echoes the Ping message and the name of the corresponding host if it is not handled locally. public class Pong : SerializationCountMessage Inheritance object SerializationCountMessage Pong Inherited Members SerializationCountMessage.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Message public string? Message { get; set; } Property Value string"
  },
  "api/DMediatR.Remote.html": {
    "href": "api/DMediatR.Remote.html",
    "title": "Class Remote | DMediatR",
    "keywords": "Class Remote Namespace DMediatR Assembly DMediatR.dll Composite object injecting all required dependencies for SendRemote(). public class Remote Inheritance object Remote Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Remote(IOptions<CertificateOptions>, IOptions<RemotesOptions>, IMediator, ISerializer, IGrpcChannelPool) public Remote(IOptions<CertificateOptions> certOptions, IOptions<RemotesOptions> remotesOptions, IMediator mediator, ISerializer serializer, IGrpcChannelPool channel) Parameters certOptions IOptions<CertificateOptions> remotesOptions IOptions<RemotesOptions> mediator IMediator serializer ISerializer channel IGrpcChannelPool"
  },
  "api/DMediatR.RemoteAttribute.html": {
    "href": "api/DMediatR.RemoteAttribute.html",
    "title": "Class RemoteAttribute | DMediatR",
    "keywords": "Class RemoteAttribute Namespace DMediatR Assembly DMediatR.dll Marks the handlers in this class as calling a gRPC endpoint (as opposed to calling locally). [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)] public class RemoteAttribute : Attribute Inheritance object Attribute RemoteAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RemoteAttribute(string) public RemoteAttribute(string name) Parameters name string Methods Name(Type) The reference name to be used in the \"Remotes\" configuration section. public static string? Name(Type t) Parameters t Type Returns string"
  },
  "api/DMediatR.RemoteExtension.html": {
    "href": "api/DMediatR.RemoteExtension.html",
    "title": "Class RemoteExtension | DMediatR",
    "keywords": "Class RemoteExtension Namespace DMediatR Assembly DMediatR.dll IRemote extension methods for connecting to a Dto gRPC service from a MediatR handler. public static class RemoteExtension Inheritance object RemoteExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods PublishRemote(IRemote, INotification, CancellationToken) Publish a MediatR INotification to a remote node. public static Task PublishRemote(this IRemote provider, INotification notification, CancellationToken cancellationToken) Parameters provider IRemote The class providing a MediatR handler notification INotification The MediatR INotification. cancellationToken CancellationToken Returns Task SendRemote<TResponse>(IRemote, IRequest<TResponse>, CancellationToken) Send a MediatR IRequest to a remote node and receive a TResponse. public static Task<TResponse> SendRemote<TResponse>(this IRemote provider, IRequest<TResponse> request, CancellationToken cancellationToken) Parameters provider IRemote The class providing a MediatR handler. request IRequest<TResponse> The MediatR IRequest. cancellationToken CancellationToken Returns Task<TResponse> The MediatR TResponse. Type Parameters TResponse"
  },
  "api/DMediatR.RemotesOptions.html": {
    "href": "api/DMediatR.RemotesOptions.html",
    "title": "Class RemotesOptions | DMediatR",
    "keywords": "Class RemotesOptions Namespace DMediatR Assembly DMediatR.dll Dictionary of HostOptions declaring the configured remotes for that DMediatR node. public sealed class RemotesOptions : Dictionary<string, HostOptions>, IDictionary<string, HostOptions>, ICollection<KeyValuePair<string, HostOptions>>, IReadOnlyDictionary<string, HostOptions>, IReadOnlyCollection<KeyValuePair<string, HostOptions>>, IEnumerable<KeyValuePair<string, HostOptions>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<string, HostOptions> RemotesOptions Implements IDictionary<string, HostOptions> ICollection<KeyValuePair<string, HostOptions>> IReadOnlyDictionary<string, HostOptions> IReadOnlyCollection<KeyValuePair<string, HostOptions>> IEnumerable<KeyValuePair<string, HostOptions>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, HostOptions>.Add(string, HostOptions) Dictionary<string, HostOptions>.Clear() Dictionary<string, HostOptions>.ContainsKey(string) Dictionary<string, HostOptions>.ContainsValue(HostOptions) Dictionary<string, HostOptions>.EnsureCapacity(int) Dictionary<string, HostOptions>.GetEnumerator() Dictionary<string, HostOptions>.OnDeserialization(object) Dictionary<string, HostOptions>.Remove(string) Dictionary<string, HostOptions>.Remove(string, out HostOptions) Dictionary<string, HostOptions>.TrimExcess() Dictionary<string, HostOptions>.TrimExcess(int) Dictionary<string, HostOptions>.TryAdd(string, HostOptions) Dictionary<string, HostOptions>.TryGetValue(string, out HostOptions) Dictionary<string, HostOptions>.Comparer Dictionary<string, HostOptions>.Count Dictionary<string, HostOptions>.this[string] Dictionary<string, HostOptions>.Keys Dictionary<string, HostOptions>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields SectionName public const string SectionName = \"Remotes\" Field Value string Properties ValidatedValues [ValidateEnumeratedItems] public IEnumerable<HostOptions> ValidatedValues { get; } Property Value IEnumerable<HostOptions>"
  },
  "api/DMediatR.SerializationCountMessage.html": {
    "href": "api/DMediatR.SerializationCountMessage.html",
    "title": "Class SerializationCountMessage | DMediatR",
    "keywords": "Class SerializationCountMessage Namespace DMediatR Assembly DMediatR.dll Base class for tracing the number of hops a DMediatR message (IRequest or INotification) has taken. The SerializationCountSerializer increments the count. public class SerializationCountMessage Inheritance object SerializationCountMessage Derived Bing Ping Pong Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count Number of times the message has been serialized. public int Count { get; set; } Property Value int"
  },
  "api/DMediatR.SerializationCountSerializer.html": {
    "href": "api/DMediatR.SerializationCountSerializer.html",
    "title": "Class SerializationCountSerializer | DMediatR",
    "keywords": "Class SerializationCountSerializer Namespace DMediatR Assembly DMediatR.dll public class SerializationCountSerializer : CustomSerializer<SerializationCountMessage>, ISerializer Inheritance object Serializer CustomSerializer<SerializationCountMessage> SerializationCountSerializer Implements ISerializer Inherited Members CustomSerializer<SerializationCountMessage>.Type CustomSerializer<SerializationCountMessage>.Serialize(Type, object, bool) CustomSerializer<SerializationCountMessage>.Deserialize(Type, byte[]) CustomSerializer<SerializationCountMessage>.Deserialize(Type, byte[], bool) CustomSerializer<SerializationCountMessage>.CheckType(Type) Serializer.Serialize(object) Serializer.Deserialize<T>(byte[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SerializationCountSerializer(IServiceProvider) public SerializationCountSerializer(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods Serialize(Type, object) Before serializing increment the object's Count property. public override byte[] Serialize(Type type, object obj) Parameters type Type obj object Returns byte[]"
  },
  "api/DMediatR.Serializer.html": {
    "href": "api/DMediatR.Serializer.html",
    "title": "Class Serializer | DMediatR",
    "keywords": "Class Serializer Namespace DMediatR Assembly DMediatR.dll General serializer gathering required specialized serializers from the ServiceCollection. public class Serializer : ISerializer Inheritance object Serializer Implements ISerializer Derived CustomSerializer<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Serializer(IServiceProvider) public Serializer(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods Deserialize(Type, byte[]) public virtual object Deserialize(Type type, byte[] bytes) Parameters type Type bytes byte[] Returns object Deserialize<T>(byte[]) public T Deserialize<T>(byte[] bytes) Parameters bytes byte[] Returns T Type Parameters T Serialize(object) public byte[] Serialize(object obj) Parameters obj object Returns byte[] Serialize(Type, object) public virtual byte[] Serialize(Type type, object obj) Parameters type Type obj object Returns byte[]"
  },
  "api/DMediatR.ServiceCollectionExtension.html": {
    "href": "api/DMediatR.ServiceCollectionExtension.html",
    "title": "Class ServiceCollectionExtension | DMediatR",
    "keywords": "Class ServiceCollectionExtension Namespace DMediatR Assembly DMediatR.dll Provides services.AddDMediatR() as a drop-in replacement for AddMediatR(). public static class ServiceCollectionExtension Inheritance object ServiceCollectionExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddDMediatR(IServiceCollection, IConfiguration, Action<MediatRServiceConfiguration>) A drop-in replacement for MediatR.AddMediatR adding services for distribution. public static IServiceCollection AddDMediatR(this IServiceCollection services, IConfiguration config, Action<MediatRServiceConfiguration> mediatrCfg) Parameters services IServiceCollection config IConfiguration mediatrCfg Action<MediatRServiceConfiguration> Returns IServiceCollection"
  },
  "api/DMediatR.html": {
    "href": "api/DMediatR.html",
    "title": "Namespace DMediatR | DMediatR",
    "keywords": "Namespace DMediatR Classes Bing Broadcast Ping as MediatR INotification. CertificateOptions X509 certificate specification, inheriting the password. Certificates Utility to create a valid initial X509 certificate chain offline to be distributed to all gRPC nodes. CorrelatedNotification Static configuration of ICorrelatedNotification for extreme workload patterns. CustomSerializer<T> Generic custom binary serializer to inherit from when implementing a concrete custom serializer for a specific type T. Types deriving from T will also use that serializer. Dto One data transfer object class for any type. DtoService Dto consumer to be used in the gRPC server. GrpcServer Utility for creating a gRPC service WebApplicationBuilder and WebApplication in a DMediatR node. HostOptions Specification of a DMediatR node host. Also used for specifying the remotes in RemotesOptions. LocalAttribute Marks the handlers in this class as local double of a [Remote] class. PasswordOptions X509 certificate password. Ping Simple MediatR IRequest for diagnosis. Pong Response to a Ping request. Echoes the Ping message and the name of the corresponding host if it is not handled locally. Remote Composite object injecting all required dependencies for SendRemote(). RemoteAttribute Marks the handlers in this class as calling a gRPC endpoint (as opposed to calling locally). RemoteExtension IRemote extension methods for connecting to a Dto gRPC service from a MediatR handler. RemotesOptions Dictionary of HostOptions declaring the configured remotes for that DMediatR node. SerializationCountMessage Base class for tracing the number of hops a DMediatR message (IRequest or INotification) has taken. The SerializationCountSerializer increments the count. SerializationCountSerializer Serializer General serializer gathering required specialized serializers from the ServiceCollection. ServiceCollectionExtension Provides services.AddDMediatR() as a drop-in replacement for AddMediatR(). Interfaces ICorrelatedNotification Multiple DMediatR nodes can have cyclic dependencies or there might be indirect diamonds in the configured dependency graph. In such cases a single node receives and would forward the same Notification in multiple duplicate copies. To handle them only once as in a monolith correlate these remote Notifications with a Guid. IDtoService Code-first gRPC service for sending a MediatR IRequest to the remote IRequestHandler. IGrpcChannelPool Its internal implementation provides a cache for long-lived gRPC channels, one instance per address. IRemote Inherit from IRemote and inject Remote to add the SendRemote extension. ISerializer Interface for the base serializer and all specialized serializers. Use it for injecting an alternate base BinarySerializer implementation with services.AddKeyedSingleton<ISerializer, BinarySerializer>(typeof(object)); Its pluggable default implementation is a tiny wrapper around MessagePackSerializer.Typeless. Enums GrpcPort Port resp. SSL certificate to use."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | DMediatR",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | DMediatR",
    "keywords": "Introduction"
  },
  "docs/serializer.html": {
    "href": "docs/serializer.html",
    "title": "Serializer | DMediatR",
    "keywords": "Serializer DMediatR uses binary serialization with pluggable custom serializers for specific types to serialize/deserialize, here with the example of Ping deriving from a custom serializer which counts the number of times the object has been serialized: Serialization Classes Serialization Classes MessagePackSerializer Typeless ISerializer Serialize(obj) Serialize(type, obj) Deserialize<T>(bytes) Deserialize(type, bytes) Serializer _typedSerializer Serialize(obj) Serialize(type, obj) Deserialize<T>(bytes) Deserialize(type, bytes) BinarySerializer Serialize(obj) Serialize(type, obj) Deserialize<T>(bytes) Deserialize(type, bytes) TypedSerializer _serviceProvider Serialize(type, obj) Deserialize(type, bytes) Serializer(type) CustomSerializer T Type CheckType(givenType) SerializationCountSerializer Serialize(type, obj) IRequest TResponse SerializationCountMessage Count Ping Message The corresponding sequence diagram hints at the serialization class dispatch mechanism: Custom Serialization Sequence for Class Ping Custom Serialization Sequence for Class Ping RemoteExtension RemoteExtension Serializer Serializer TypedSerializer TypedSerializer SerializationCountSerializer SerializationCountSerializer BinarySerializer BinarySerializer Serialize(obj) Serialize(type, obj) Serialize(type, obj) GetSerializer(type) Serialize(type, obj) GetSerializer(type) Serialize(type, obj) Serialize(type, obj) GetSerializer(type) Serialize(type, obj) byte[] byte[] byte[] byte[]"
  },
  "index.html": {
    "href": "index.html",
    "title": "DMediatR | DMediatR",
    "keywords": "DMediatR Distributed MediatR over gRPC with auto-renewing X509 client certificate TLS."
  }
}